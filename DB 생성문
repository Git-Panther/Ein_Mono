--------------------------------------------------------
--  파일이 생성됨 - 금요일-8월-31-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence ACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."ACT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONTACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."CONTACT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_ADV_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_ADV_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_FAQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_FAQ_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_FREE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_FREE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_QNA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_QNA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_REVIEW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_REVIEW_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_SHOW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_SHOW_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence POST_TRADE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."POST_TRADE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PTN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."PTN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REPLY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."REPLY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."REQ_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ACT
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_ACT"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 62 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ADV
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_ADV"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_COMPANY_CODE
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_COMPANY_CODE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MCODE
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_MCODE"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 12 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_MEMBER_CODE
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_MEMBER_CODE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 140 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PNO
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_PNO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RCODE
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_RCODE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_REQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."SEQ_REQ"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 9 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence UPDATE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."UPDATE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence USER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MONO"."USER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ADVERTISING
--------------------------------------------------------

  CREATE TABLE "MONO"."ADVERTISING" 
   (	"POST_CODE" VARCHAR2(10 BYTE), 
	"PTN_CODE" VARCHAR2(10 BYTE), 
	"ADV_BANNER" VARCHAR2(100 BYTE), 
	"ADV_PHOTO" VARCHAR2(100 BYTE), 
	"ADV_STARTDATE" DATE, 
	"ADV_ENDDATE" DATE, 
	"ADV_LEVEL" NUMBER DEFAULT 5
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."ADVERTISING"."POST_CODE" IS '게시글코드';
   COMMENT ON COLUMN "MONO"."ADVERTISING"."PTN_CODE" IS '업체코드';
   COMMENT ON COLUMN "MONO"."ADVERTISING"."ADV_BANNER" IS '광고사진_배너';
   COMMENT ON COLUMN "MONO"."ADVERTISING"."ADV_PHOTO" IS '광고사진_내용';
   COMMENT ON COLUMN "MONO"."ADVERTISING"."ADV_STARTDATE" IS '광고시작일';
   COMMENT ON COLUMN "MONO"."ADVERTISING"."ADV_ENDDATE" IS '광고종료일';
--------------------------------------------------------
--  DDL for Table AUCTION_PTN
--------------------------------------------------------

  CREATE TABLE "MONO"."AUCTION_PTN" 
   (	"PTN_CODE" VARCHAR2(10 BYTE), 
	"REQ_CODE" VARCHAR2(10 BYTE), 
	"PTN_PAY" NUMBER(8,0), 
	"BID_CHECK" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."AUCTION_PTN"."PTN_CODE" IS '업체코드';
   COMMENT ON COLUMN "MONO"."AUCTION_PTN"."REQ_CODE" IS '주문코드';
   COMMENT ON COLUMN "MONO"."AUCTION_PTN"."PTN_PAY" IS '희망낙찰가';
   COMMENT ON COLUMN "MONO"."AUCTION_PTN"."BID_CHECK" IS '낙찰여부';
--------------------------------------------------------
--  DDL for Table CONST_PHOTO
--------------------------------------------------------

  CREATE TABLE "MONO"."CONST_PHOTO" 
   (	"PTN_CODE" VARCHAR2(10 BYTE), 
	"PHOTO_OLDNAME" VARCHAR2(100 BYTE), 
	"PHOTO_NUM" NUMBER, 
	"PHOTO_NEWNAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FAVOR_BLOCK
--------------------------------------------------------

  CREATE TABLE "MONO"."FAVOR_BLOCK" 
   (	"USER_CODE" VARCHAR2(10 BYTE), 
	"TARGET_CODE" VARCHAR2(10 BYTE), 
	"FB_TYPE" VARCHAR2(12 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."FAVOR_BLOCK"."USER_CODE" IS '회원코드';
   COMMENT ON COLUMN "MONO"."FAVOR_BLOCK"."TARGET_CODE" IS '대상코드';
   COMMENT ON COLUMN "MONO"."FAVOR_BLOCK"."FB_TYPE" IS '즐겨찾기/차단 구분';
--------------------------------------------------------
--  DDL for Table KEYWORD
--------------------------------------------------------

  CREATE TABLE "MONO"."KEYWORD" 
   (	"KEYWORD_NO" NUMBER, 
	"KEYWORD_CONTENT" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MEMBER
--------------------------------------------------------

  CREATE TABLE "MONO"."MEMBER" 
   (	"MEMBER_CODE" VARCHAR2(10 BYTE), 
	"MEMBER_RANK" VARCHAR2(15 BYTE) DEFAULT '일반', 
	"MEMBER_ID" VARCHAR2(16 BYTE), 
	"MEMBER_PWD" VARCHAR2(100 BYTE), 
	"MEMBER_NAME" VARCHAR2(30 BYTE), 
	"MEMBER_EMAIL" VARCHAR2(100 BYTE), 
	"MEMBER_ADDRESS" VARCHAR2(100 BYTE), 
	"MEMBER_TEL" VARCHAR2(13 BYTE), 
	"MEMBER_NNAME" VARCHAR2(30 BYTE), 
	"MEMBER_JDATE" DATE DEFAULT SYSDATE, 
	"DELFLAG" CHAR(1 BYTE) DEFAULT 'N', 
	"LICENCE" VARCHAR2(30 BYTE), 
	"REPORT_COUNT" NUMBER DEFAULT '0'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_CODE" IS '회원구분코드 A-관리자/B-회원/C-업체';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_RANK" IS '회원등급코드 일반회원/업체,미승인업체,우수업체,블랙리스트,관리자';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_ID" IS '회원아이디';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_PWD" IS '회원비밀번호';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_NAME" IS '회원이름/업체명';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_EMAIL" IS '회원이메일';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_ADDRESS" IS '회원주소';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_TEL" IS '회원 전화번호';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_NNAME" IS '회원 닉네임';
   COMMENT ON COLUMN "MONO"."MEMBER"."MEMBER_JDATE" IS '가입날짜';
--------------------------------------------------------
--  DDL for Table PARTNER
--------------------------------------------------------

  CREATE TABLE "MONO"."PARTNER" 
   (	"PTN_CODE" VARCHAR2(10 BYTE), 
	"PTN_OWNER" VARCHAR2(30 BYTE), 
	"PTN_CHECK" CHAR(1 BYTE) DEFAULT 'N', 
	"PTN_LICENSE" VARCHAR2(100 BYTE), 
	"PTN_LOGO" VARCHAR2(100 BYTE) DEFAULT NULL, 
	"PTN_LOCATION" VARCHAR2(100 BYTE), 
	"PTN_STYLES" VARCHAR2(100 BYTE), 
	"PTN_INTRO" CLOB, 
	"WEEKDAYS_START" VARCHAR2(5 BYTE) DEFAULT NULL, 
	"WEEKDAYS_END" VARCHAR2(5 BYTE) DEFAULT NULL, 
	"WEEKEND_START" VARCHAR2(5 BYTE) DEFAULT NULL, 
	"WEEKEND_END" VARCHAR2(5 BYTE) DEFAULT NULL, 
	"PTN_CONTACTS" VARCHAR2(4000 BYTE) DEFAULT NULL, 
	"PTN_UPDATES" VARCHAR2(4000 BYTE) DEFAULT NULL, 
	"PTN_PHOTO" VARCHAR2(4000 BYTE) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PTN_INTRO") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_CODE" IS '업체코드';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_OWNER" IS '업체대표자명';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_CHECK" IS '업체승인여부';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_LICENSE" IS '사업자등록증';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_LOGO" IS '회사로고';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_LOCATION" IS '업체 시공 지역';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_STYLES" IS '시공 스타일';
   COMMENT ON COLUMN "MONO"."PARTNER"."PTN_INTRO" IS '업체 소개';
   COMMENT ON COLUMN "MONO"."PARTNER"."WEEKDAYS_START" IS '평일상담시작시간';
   COMMENT ON COLUMN "MONO"."PARTNER"."WEEKDAYS_END" IS '평일상담종료시간';
   COMMENT ON COLUMN "MONO"."PARTNER"."WEEKEND_START" IS '주말상담시작시간';
   COMMENT ON COLUMN "MONO"."PARTNER"."WEEKEND_END" IS '주말상담종료시간';
--------------------------------------------------------
--  DDL for Table POST
--------------------------------------------------------

  CREATE TABLE "MONO"."POST" 
   (	"POST_CODE" VARCHAR2(10 BYTE), 
	"POST_TYPE" CHAR(3 BYTE), 
	"WRITER_CODE" VARCHAR2(10 BYTE), 
	"TITLE" VARCHAR2(90 BYTE), 
	"CONTENT" CLOB, 
	"VIEWS_COUNT" NUMBER DEFAULT 0, 
	"WRITTEN_DATE" DATE DEFAULT SYSDATE, 
	"DELFLAG" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

   COMMENT ON COLUMN "MONO"."POST"."POST_CODE" IS '게시글코드';
   COMMENT ON COLUMN "MONO"."POST"."POST_TYPE" IS '게시판분류';
   COMMENT ON COLUMN "MONO"."POST"."WRITER_CODE" IS '작성자';
   COMMENT ON COLUMN "MONO"."POST"."TITLE" IS '게시글 제목';
   COMMENT ON COLUMN "MONO"."POST"."CONTENT" IS '게시글 내용';
   COMMENT ON COLUMN "MONO"."POST"."VIEWS_COUNT" IS '조회수';
   COMMENT ON COLUMN "MONO"."POST"."WRITTEN_DATE" IS '게시글 작성일';
--------------------------------------------------------
--  DDL for Table POST_REC
--------------------------------------------------------

  CREATE TABLE "MONO"."POST_REC" 
   (	"MEMBER_CODE" VARCHAR2(10 BYTE), 
	"POST_CODE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."POST_REC"."MEMBER_CODE" IS '회원코드';
   COMMENT ON COLUMN "MONO"."POST_REC"."POST_CODE" IS '게시글코드';
--------------------------------------------------------
--  DDL for Table PTN_QNA
--------------------------------------------------------

  CREATE TABLE "MONO"."PTN_QNA" 
   (	"PTN_CODE" VARCHAR2(10 BYTE), 
	"POST_CODE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table REPLY
--------------------------------------------------------

  CREATE TABLE "MONO"."REPLY" 
   (	"REPLY_CODE" VARCHAR2(10 BYTE), 
	"WRITER_CODE" VARCHAR2(10 BYTE), 
	"POST_CODE" VARCHAR2(10 BYTE), 
	"REPLY_CONTENT" VARCHAR2(300 BYTE), 
	"REPLY_DATE" DATE DEFAULT SYSDATE, 
	"DELFLAG" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."REPLY"."REPLY_CODE" IS '댓글코드';
   COMMENT ON COLUMN "MONO"."REPLY"."WRITER_CODE" IS '작성자코드';
   COMMENT ON COLUMN "MONO"."REPLY"."POST_CODE" IS '게시글코드';
   COMMENT ON COLUMN "MONO"."REPLY"."REPLY_CONTENT" IS '댓글내용';
   COMMENT ON COLUMN "MONO"."REPLY"."REPLY_DATE" IS '댓글작성일';
--------------------------------------------------------
--  DDL for Table REPLY_REC
--------------------------------------------------------

  CREATE TABLE "MONO"."REPLY_REC" 
   (	"MEMBER_CODE" VARCHAR2(10 BYTE), 
	"REPLY_CODE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."REPLY_REC"."MEMBER_CODE" IS '회원코드';
   COMMENT ON COLUMN "MONO"."REPLY_REC"."REPLY_CODE" IS '댓글코드';
--------------------------------------------------------
--  DDL for Table REPORT
--------------------------------------------------------

  CREATE TABLE "MONO"."REPORT" 
   (	"REPORT_CODE" VARCHAR2(10 BYTE), 
	"REPORTER_CODE" VARCHAR2(10 BYTE), 
	"REPORTED_CODE" VARCHAR2(10 BYTE), 
	"POST_CODE" VARCHAR2(10 BYTE), 
	"REPLY_CODE" VARCHAR2(10 BYTE), 
	"REPORT_REASON" LONG, 
	"ADMIN_CHECK" CHAR(1 BYTE) DEFAULT 'N', 
	"REPORT_DATE" DATE DEFAULT SYSDATE, 
	"BAN_STARTDATE" DATE, 
	"BAN_ENDDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."REPORT"."REPORT_CODE" IS '신고코드';
   COMMENT ON COLUMN "MONO"."REPORT"."REPORTER_CODE" IS '신고자코드';
   COMMENT ON COLUMN "MONO"."REPORT"."REPORTED_CODE" IS '신고대상코드';
   COMMENT ON COLUMN "MONO"."REPORT"."POST_CODE" IS '게시글코드';
   COMMENT ON COLUMN "MONO"."REPORT"."REPLY_CODE" IS '댓글코드';
   COMMENT ON COLUMN "MONO"."REPORT"."REPORT_REASON" IS '신고사유';
   COMMENT ON COLUMN "MONO"."REPORT"."ADMIN_CHECK" IS '관리자확인';
   COMMENT ON COLUMN "MONO"."REPORT"."REPORT_DATE" IS '신고일';
   COMMENT ON COLUMN "MONO"."REPORT"."BAN_STARTDATE" IS '정지시작일';
   COMMENT ON COLUMN "MONO"."REPORT"."BAN_ENDDATE" IS '정지종료일';
--------------------------------------------------------
--  DDL for Table REQUEST
--------------------------------------------------------

  CREATE TABLE "MONO"."REQUEST" 
   (	"REQ_CODE" VARCHAR2(10 BYTE), 
	"REQ_TYPE" VARCHAR2(30 BYTE), 
	"USER_CODE" VARCHAR2(10 BYTE), 
	"PTN_CODE" VARCHAR2(10 BYTE), 
	"CONST_ADDRESS" VARCHAR2(300 BYTE), 
	"REQUEST" VARCHAR2(1500 BYTE), 
	"SAMPLE_PHOTO1" VARCHAR2(100 BYTE), 
	"SAMPLE_PHOTO2" VARCHAR2(100 BYTE), 
	"REQ_PRICE" VARCHAR2(100 BYTE), 
	"REQ_DATE" DATE, 
	"ACT_STARTDATE" DATE DEFAULT SYSDATE, 
	"ACT_ENDDATE" DATE, 
	"REQ_CHECK" VARCHAR2(30 BYTE), 
	"CONST_STARTDATE" DATE, 
	"CONST_ENDDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."REQUEST"."REQ_CODE" IS '주문코드';
   COMMENT ON COLUMN "MONO"."REQUEST"."REQ_TYPE" IS '주문분류 경매/업체지정';
   COMMENT ON COLUMN "MONO"."REQUEST"."USER_CODE" IS '신청자코드';
   COMMENT ON COLUMN "MONO"."REQUEST"."PTN_CODE" IS '업체결정코드';
   COMMENT ON COLUMN "MONO"."REQUEST"."CONST_ADDRESS" IS '시공지주소';
   COMMENT ON COLUMN "MONO"."REQUEST"."REQUEST" IS '요청사항';
   COMMENT ON COLUMN "MONO"."REQUEST"."SAMPLE_PHOTO1" IS '희망인테리어사진1';
   COMMENT ON COLUMN "MONO"."REQUEST"."SAMPLE_PHOTO2" IS '희망인테리어사진2';
   COMMENT ON COLUMN "MONO"."REQUEST"."REQ_PRICE" IS '견적희망가';
   COMMENT ON COLUMN "MONO"."REQUEST"."REQ_DATE" IS '시공희망일';
   COMMENT ON COLUMN "MONO"."REQUEST"."ACT_STARTDATE" IS '경매시작일';
   COMMENT ON COLUMN "MONO"."REQUEST"."ACT_ENDDATE" IS '경매종료일';
   COMMENT ON COLUMN "MONO"."REQUEST"."REQ_CHECK" IS '진행상태';
   COMMENT ON COLUMN "MONO"."REQUEST"."CONST_STARTDATE" IS '시공시작일';
   COMMENT ON COLUMN "MONO"."REQUEST"."CONST_ENDDATE" IS '시공종료일';
--------------------------------------------------------
--  DDL for Table REQ_INFO
--------------------------------------------------------

  CREATE TABLE "MONO"."REQ_INFO" 
   (	"REQ_CODE" VARCHAR2(10 BYTE), 
	"ACREAGE" NUMBER(8,0), 
	"VERANDA" CHAR(1 BYTE) DEFAULT 'N', 
	"ELECTRIC" VARCHAR2(300 BYTE) DEFAULT NULL, 
	"FLOORING" VARCHAR2(30 BYTE), 
	"PAPERING" VARCHAR2(30 BYTE), 
	"COATING" VARCHAR2(30 BYTE), 
	"CEILING" VARCHAR2(30 BYTE), 
	"MIDDLEDOOR" VARCHAR2(30 BYTE), 
	"WINDOW" VARCHAR2(50 BYTE), 
	"TILE" VARCHAR2(50 BYTE), 
	"BATHROOM" VARCHAR2(30 BYTE), 
	"KITCHEN" VARCHAR2(30 BYTE), 
	"CLEANING" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."REQ_INFO"."REQ_CODE" IS '주문코드';
   COMMENT ON COLUMN "MONO"."REQ_INFO"."ACREAGE" IS '평수';
   COMMENT ON COLUMN "MONO"."REQ_INFO"."VERANDA" IS '베란다 유무';
   COMMENT ON COLUMN "MONO"."REQ_INFO"."ELECTRIC" IS '전기공사';
   COMMENT ON COLUMN "MONO"."REQ_INFO"."FLOORING" IS '바닥재';
   COMMENT ON COLUMN "MONO"."REQ_INFO"."PAPERING" IS '도배';
   COMMENT ON COLUMN "MONO"."REQ_INFO"."COATING" IS '도장재';
--------------------------------------------------------
--  DDL for Table REVIEW
--------------------------------------------------------

  CREATE TABLE "MONO"."REVIEW" 
   (	"POST_CODE" VARCHAR2(10 BYTE), 
	"REQ_CODE" VARCHAR2(10 BYTE), 
	"GPA" NUMBER(1,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MONO"."REVIEW"."POST_CODE" IS '게시글코드';
   COMMENT ON COLUMN "MONO"."REVIEW"."REQ_CODE" IS '주문코드';
   COMMENT ON COLUMN "MONO"."REVIEW"."GPA" IS '평점';
--------------------------------------------------------
--  DDL for View ACTPTN_VIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."ACTPTN_VIEW" ("PTN_CODE", "REQ_CODE", "PTN_PAY", "BID_CHECK", "ACTPTN_NAME") AS 
  SELECT AP."PTN_CODE",AP."REQ_CODE",AP."PTN_PAY",AP."BID_CHECK", M.MEMBER_NAME AS "ACTPTN_NAME" FROM AUCTION_PTN AP
JOIN MEMBER M ON(AP.PTN_CODE = M.MEMBER_CODE)
;
--------------------------------------------------------
--  DDL for View ACT_LIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."ACT_LIST" ("REQ_CODE", "REQ_TYPE", "USER_NAME", "CONST_ADDRESS", "REQ_DATE", "REQ_CHECK") AS 
  SELECT "REQ_CODE","REQ_TYPE","USER_NAME","CONST_ADDRESS","REQ_DATE","REQ_CHECK"
FROM REQ_LIST
WHERE REQ_TYPE = '경매'
;
--------------------------------------------------------
--  DDL for View PARTNERS_FAV
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."PARTNERS_FAV" ("PTN_CODE", "FAVCOUNT") AS 
  SELECT PTN_CODE, COUNT(*) AS "FAVCOUNT"
FROM PARTNER
JOIN FAVOR_BLOCK ON(PTN_CODE = TARGET_CODE)
WHERE FB_TYPE = '즐겨찾기'
GROUP BY PTN_CODE
;
--------------------------------------------------------
--  DDL for View PARTNER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."PARTNER_DETAIL" ("PTN_CODE", "PTN_OWNER", "PTN_CHECK", "PTN_LICENSE", "PTN_LOGO", "PTN_LOCATION", "PTN_STYLES", "PTN_INTRO", "WEEKDAYS_START", "WEEKDAYS_END", "WEEKEND_START", "WEEKEND_END", "PTN_CONTACTS", "PTN_UPDATES", "PTN_PHOTO", "METASCORE", "FAVCOUNT", "PTN_NAME", "PTN_RANK", "MEMBER_JDATE") AS 
  SELECT P."PTN_CODE",P."PTN_OWNER",P."PTN_CHECK",P."PTN_LICENSE",P."PTN_LOGO",P."PTN_LOCATION",P."PTN_STYLES",P."PTN_INTRO",P."WEEKDAYS_START",P."WEEKDAYS_END",P."WEEKEND_START",P."WEEKEND_END",P."PTN_CONTACTS",P."PTN_UPDATES",P."PTN_PHOTO", METASCORE, NVL(FAVCOUNT, 0) AS "FAVCOUNT", MEMBER_NAME AS "PTN_NAME", MEMBER_RANK AS "PTN_RANK", MEMBER_JDATE
FROM PARTNER P
JOIN MEMBER M ON(M.MEMBER_CODE = P.PTN_CODE)
LEFT OUTER JOIN PARTNER_METASCORE PM ON(P.PTN_CODE = PM.PTN_CODE)
LEFT OUTER JOIN PARTNERS_FAV PF ON(P.PTN_CODE = PF.PTN_CODE)
WHERE DELFLAG = 'N'
;
--------------------------------------------------------
--  DDL for View PARTNER_METASCORE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."PARTNER_METASCORE" ("PTN_CODE", "METASCORE") AS 
  SELECT PTN_CODE, NVL(AVG(GPA), 0) AS "METASCORE"
FROM PARTNER
LEFT OUTER JOIN REQUEST USING(PTN_CODE)
LEFT OUTER JOIN REVIEW USING(REQ_CODE) -- PTN_CODE 있음
GROUP BY PTN_CODE
;
--------------------------------------------------------
--  DDL for View PARTNER_PREVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."PARTNER_PREVIEW" ("PTN_CODE", "PTN_NAME", "PTN_RANK", "PTN_LOCATION", "METASCORE", "PTN_MAIN_PHOTO", "PTN_STYLES", "MEMBER_JDATE") AS 
  SELECT PTN_CODE, PTN_NAME, PTN_RANK, PTN_LOCATION, METASCORE, SUBSTR(PTN_PHOTO, 1, INSTR(PTN_PHOTO, '§') - 1) AS PTN_MAIN_PHOTO, PTN_STYLES, MEMBER_JDATE
FROM PARTNER_DETAIL
;
--------------------------------------------------------
--  DDL for View POST_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."POST_DETAIL" ("POST_CODE", "POST_TYPE", "WRITER_CODE", "TITLE", "CONTENT", "VIEWS_COUNT", "WRITTEN_DATE", "DELFLAG", "REPLYCOUNT", "RECCOUNT", "WRITER_NAME", "WRITER_NNAME") AS 
  SELECT PO."POST_CODE",PO."POST_TYPE",PO."WRITER_CODE",PO."TITLE",PO."CONTENT",PO."VIEWS_COUNT",PO."WRITTEN_DATE",PO."DELFLAG", NVL(RC.REPLYCOUNT, 0) AS "REPLYCOUNT", NVL(PR.RECCOUNT, 0) AS "RECCOUNT", WR.MEMBER_NAME AS "WRITER_NAME", WR.MEMBER_NNAME AS "WRITER_NNAME"
FROM POST PO
LEFT OUTER JOIN REPLY_COUNT RC ON(PO.POST_CODE = RC.POST_CODE)
LEFT OUTER JOIN POST_REC_COUNT PR ON(PO.POST_CODE = PR.POST_CODE)
JOIN MEMBER WR ON(PO.WRITER_CODE = WR.MEMBER_CODE)
WHERE PO.DELFLAG = 'N'
;
--------------------------------------------------------
--  DDL for View POST_REC_COUNT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."POST_REC_COUNT" ("POST_CODE", "RECCOUNT") AS 
  SELECT POST_CODE, NVL(COUNT(*), 0) AS "RECCOUNT"
FROM POST_REC
GROUP BY POST_CODE
;
--------------------------------------------------------
--  DDL for View QNA_POST
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."QNA_POST" ("POST_CODE", "POST_TYPE", "WRITER_CODE", "TITLE", "CONTENT", "VIEWS_COUNT", "WRITTEN_DATE", "DELFLAG", "REPLYCOUNT", "WRITER_NAME", "WRITER_NNAME", "PTN_NAME", "PTN_CODE") AS 
  SELECT PO."POST_CODE",PO."POST_TYPE",PO."WRITER_CODE",PO."TITLE",PO."CONTENT",PO."VIEWS_COUNT",PO."WRITTEN_DATE",PO."DELFLAG", NVL(RC.REPLYCOUNT, 0) AS "REPLYCOUNT", WR.MEMBER_NAME AS "WRITER_NAME", WR.MEMBER_NNAME AS "WRITER_NNAME", PT2.MEMBER_NAME AS "PTN_NAME", PT1.PTN_CODE
FROM POST PO
LEFT OUTER JOIN REPLY_COUNT RC ON(PO.POST_CODE = RC.POST_CODE)
JOIN PTN_QNA PQ ON(PO.POST_CODE = PQ.POST_CODE)
JOIN PARTNER PT1 ON(PQ.PTN_CODE = PT1.PTN_CODE)
JOIN MEMBER PT2 ON(PT1.PTN_CODE = PT2.MEMBER_CODE)
JOIN MEMBER WR ON(PO.WRITER_CODE = WR.MEMBER_CODE)
WHERE PO.DELFLAG = 'N' AND PO.POST_TYPE = 'QNA'
;
--------------------------------------------------------
--  DDL for View REPLY_COUNT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."REPLY_COUNT" ("POST_CODE", "REPLYCOUNT") AS 
  SELECT POST_CODE, NVL(COUNT(*), 0) AS "REPLYCOUNT"
FROM REPLY
GROUP BY POST_CODE
;
--------------------------------------------------------
--  DDL for View REPLY_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."REPLY_DETAIL" ("REPLY_CODE", "WRITER_CODE", "POST_CODE", "REPLY_CONTENT", "REPLY_DATE", "DELFLAG", "RECCOUNT", "WRITER_NAME", "WRITER_NNAME") AS 
  SELECT RP."REPLY_CODE",RP."WRITER_CODE",RP."POST_CODE",RP."REPLY_CONTENT",RP."REPLY_DATE",RP."DELFLAG", NVL(REC.RECCOUNT, 0) AS "RECCOUNT", WR.MEMBER_NAME AS "WRITER_NAME", WR.MEMBER_NNAME AS "WRITER_NNAME"
FROM REPLY RP
LEFT OUTER JOIN REPLY_REC_COUNT REC ON(RP.REPLY_CODE = REC.REPLY_CODE)
JOIN MEMBER WR ON(RP.WRITER_CODE = WR.MEMBER_CODE)
;
--------------------------------------------------------
--  DDL for View REPLY_REC_COUNT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."REPLY_REC_COUNT" ("REPLY_CODE", "RECCOUNT") AS 
  SELECT REPLY_CODE, NVL(COUNT(*), 0) AS "RECCOUNT"
FROM REPLY_REC
GROUP BY REPLY_CODE
;
--------------------------------------------------------
--  DDL for View REQ_LIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."REQ_LIST" ("REQ_CODE", "REQ_TYPE", "USER_NAME", "CONST_ADDRESS", "REQ_DATE", "REQ_CHECK") AS 
  SELECT REQ_CODE, REQ_TYPE, USER_NAME, CONST_ADDRESS, REQ_DATE, REQ_CHECK
FROM REQ_VIEW
;
--------------------------------------------------------
--  DDL for View REQ_VIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."REQ_VIEW" ("REQ_CODE", "REQ_TYPE", "USER_CODE", "PTN_CODE", "CONST_ADDRESS", "REQUEST", "SAMPLE_PHOTO1", "SAMPLE_PHOTO2", "REQ_PRICE", "REQ_DATE", "ACT_STARTDATE", "ACT_ENDDATE", "REQ_CHECK", "CONST_STARTDATE", "CONST_ENDDATE", "ACREAGE", "VERANDA", "ELECTRIC", "FLOORING", "PAPERING", "COATING", "CEILING", "MIDDLEDOOR", "WINDOW", "TILE", "BATHROOM", "KITCHEN", "CLEANING", "USER_NAME", "USER_NNAME", "PTN_NAME") AS 
  SELECT R."REQ_CODE",R."REQ_TYPE",R."USER_CODE",R."PTN_CODE",R."CONST_ADDRESS",R."REQUEST",R."SAMPLE_PHOTO1",R."SAMPLE_PHOTO2",R."REQ_PRICE",R."REQ_DATE",R."ACT_STARTDATE",R."ACT_ENDDATE",R."REQ_CHECK",R."CONST_STARTDATE",R."CONST_ENDDATE", RI.ACREAGE, RI.VERANDA, RI.ELECTRIC, RI.FLOORING, RI.PAPERING, RI.COATING, RI.CEILING, RI.MIDDLEDOOR, RI.WINDOW, RI.TILE, RI.BATHROOM, RI.KITCHEN, RI.CLEANING, M.MEMBER_NAME AS "USER_NAME", M.MEMBER_NNAME AS "USER_NNAME", MP.MEMBER_NAME AS "PTN_NAME" 
        FROM REQUEST R
JOIN REQ_INFO RI ON(R.REQ_CODE = RI.REQ_CODE)-- 주문 상세 정보
JOIN MEMBER M ON(R.USER_CODE = M.MEMBER_CODE) -- 주문글 쓴 고객
LEFT OUTER JOIN PARTNER P ON(R.PTN_CODE = P.PTN_CODE) -- 주문을 이행할 업체(경매, 시공 포함). NULL이더라도 LEFT OUTER JOIN으로 조회 가능
LEFT OUTER JOIN MEMBER MP ON(P.PTN_CODE = MP.MEMBER_CODE)
;
--------------------------------------------------------
--  DDL for View REVIEW_POST
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "MONO"."REVIEW_POST" ("GPA", "REQ_CODE", "POST_CODE", "POST_TYPE", "WRITER_CODE", "TITLE", "CONTENT", "VIEWS_COUNT", "WRITTEN_DATE", "DELFLAG", "WRITER_NAME", "WRITER_NNAME", "PTN_CODE", "PTN_NAME") AS 
  SELECT RV.GPA, RQ.REQ_CODE, PO."POST_CODE",PO."POST_TYPE",PO."WRITER_CODE",PO."TITLE",PO."CONTENT",PO."VIEWS_COUNT",PO."WRITTEN_DATE",PO."DELFLAG",  WR.MEMBER_NAME AS "WRITER_NAME", WR.MEMBER_NNAME AS "WRITER_NNAME", RQ.PTN_CODE AS "PTN_CODE", PT.MEMBER_NAME AS "PTN_NAME"
FROM REVIEW RV
JOIN POST PO ON(RV.POST_CODE = PO.POST_CODE)
JOIN REQUEST RQ ON(RV.REQ_CODE = RQ.REQ_CODE)
JOIN MEMBER WR ON(PO.WRITER_CODE = WR.MEMBER_CODE)
JOIN MEMBER PT ON(RQ.PTN_CODE = PT.MEMBER_CODE)
;
REM INSERTING into MONO.ADVERTISING
SET DEFINE OFF;
REM INSERTING into MONO.AUCTION_PTN
SET DEFINE OFF;
Insert into MONO.AUCTION_PTN (PTN_CODE,REQ_CODE,PTN_PAY,BID_CHECK) values ('C122','ACT59',6666,'Y');
Insert into MONO.AUCTION_PTN (PTN_CODE,REQ_CODE,PTN_PAY,BID_CHECK) values ('C122','ACT58',23424,'Y');
Insert into MONO.AUCTION_PTN (PTN_CODE,REQ_CODE,PTN_PAY,BID_CHECK) values ('C122','ACT57',3000000,'Y');
Insert into MONO.AUCTION_PTN (PTN_CODE,REQ_CODE,PTN_PAY,BID_CHECK) values ('C122','ACT60',3000000,'Y');
REM INSERTING into MONO.CONST_PHOTO
SET DEFINE OFF;
REM INSERTING into MONO.FAVOR_BLOCK
SET DEFINE OFF;
REM INSERTING into MONO.KEYWORD
SET DEFINE OFF;
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (1,'모던');
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (2,'북유럽');
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (3,'화이트');
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (4,'우드');
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (5,'자연주의');
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (6,'미니멀리즘');
Insert into MONO.KEYWORD (KEYWORD_NO,KEYWORD_CONTENT) values (7,'인더스트리얼');
REM INSERTING into MONO.MEMBER
SET DEFINE OFF;
Insert into MONO.MEMBER (MEMBER_CODE,MEMBER_RANK,MEMBER_ID,MEMBER_PWD,MEMBER_NAME,MEMBER_EMAIL,MEMBER_ADDRESS,MEMBER_TEL,MEMBER_NNAME,MEMBER_JDATE,DELFLAG,LICENCE,REPORT_COUNT) values ('C122','일반업체','partner01','partner01','모노','xosle94@gmail.com','(63534), 제주특별자치도 서귀포시 가가로 14 (상예동), 4층','010-6561-2016','모노',to_date('18/08/31','RR/MM/DD'),'N','admin.sql',0);
Insert into MONO.MEMBER (MEMBER_CODE,MEMBER_RANK,MEMBER_ID,MEMBER_PWD,MEMBER_NAME,MEMBER_EMAIL,MEMBER_ADDRESS,MEMBER_TEL,MEMBER_NNAME,MEMBER_JDATE,DELFLAG,LICENCE,REPORT_COUNT) values ('B120','일반회원','user01','user01','전유민','kanag01@naver.com','(34672), 대전 동구 판교2길 9 (판암동), 상세주소','010-6561-2016','전유민',to_date('18/08/31','RR/MM/DD'),'N',null,0);
Insert into MONO.MEMBER (MEMBER_CODE,MEMBER_RANK,MEMBER_ID,MEMBER_PWD,MEMBER_NAME,MEMBER_EMAIL,MEMBER_ADDRESS,MEMBER_TEL,MEMBER_NNAME,MEMBER_JDATE,DELFLAG,LICENCE,REPORT_COUNT) values ('B123','일반회원','user02','user02','조하늘','asd@naver.com','(06097), 서울 강남구 봉은사로 403 (삼성동, 하모니 빌딩), 4층','010-222-333','조하늘',to_date('18/08/31','RR/MM/DD'),'N',null,0);
Insert into MONO.MEMBER (MEMBER_CODE,MEMBER_RANK,MEMBER_ID,MEMBER_PWD,MEMBER_NAME,MEMBER_EMAIL,MEMBER_ADDRESS,MEMBER_TEL,MEMBER_NNAME,MEMBER_JDATE,DELFLAG,LICENCE,REPORT_COUNT) values ('B124','일반회원','user03','user03','김정인','jungin2ya@naver.com','(06774), 서울 서초구 강남대로 27 (양재동, 농수산물유통공사), 4층','010-222-5678','김정인',to_date('18/08/31','RR/MM/DD'),'N',null,0);
Insert into MONO.MEMBER (MEMBER_CODE,MEMBER_RANK,MEMBER_ID,MEMBER_PWD,MEMBER_NAME,MEMBER_EMAIL,MEMBER_ADDRESS,MEMBER_TEL,MEMBER_NNAME,MEMBER_JDATE,DELFLAG,LICENCE,REPORT_COUNT) values ('B125','일반회원','user04','user04','유지상','xole94@gmail.com','(10428), 경기 고양시 일산동구 장대길 106-25 (장항동, 코앤마), 4층','010-123-5678','유지상',to_date('18/08/31','RR/MM/DD'),'N',null,0);
REM INSERTING into MONO.PARTNER
SET DEFINE OFF;
Insert into MONO.PARTNER (PTN_CODE,PTN_OWNER,PTN_CHECK,PTN_LICENSE,PTN_LOGO,PTN_LOCATION,PTN_STYLES,WEEKDAYS_START,WEEKDAYS_END,WEEKEND_START,WEEKEND_END,PTN_CONTACTS,PTN_UPDATES,PTN_PHOTO) values ('C122','유지상','Y','admin.sql',null,'D','평택','NULL',null,null,null,'d',null,null);
REM INSERTING into MONO.POST
SET DEFINE OFF;
Insert into MONO.POST (POST_CODE,POST_TYPE,WRITER_CODE,TITLE,VIEWS_COUNT,WRITTEN_DATE,DELFLAG) values ('FRE41','FRE','C122','asdasdas',2,to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.POST (POST_CODE,POST_TYPE,WRITER_CODE,TITLE,VIEWS_COUNT,WRITTEN_DATE,DELFLAG) values ('FRE42','FRE','B120','dsdsadasdasdasd',0,to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.POST (POST_CODE,POST_TYPE,WRITER_CODE,TITLE,VIEWS_COUNT,WRITTEN_DATE,DELFLAG) values ('SHO21','SHO','B120','asdasdasdasdasd',2,to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.POST (POST_CODE,POST_TYPE,WRITER_CODE,TITLE,VIEWS_COUNT,WRITTEN_DATE,DELFLAG) values ('MAR21','MAR','B120','asdasdasdasdasdasda',0,to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.POST (POST_CODE,POST_TYPE,WRITER_CODE,TITLE,VIEWS_COUNT,WRITTEN_DATE,DELFLAG) values ('REV21','REV','B120','asdasdasdasdasdasd',0,to_date('18/08/31','RR/MM/DD'),'N');
REM INSERTING into MONO.POST_REC
SET DEFINE OFF;
REM INSERTING into MONO.PTN_QNA
SET DEFINE OFF;
REM INSERTING into MONO.REPLY
SET DEFINE OFF;
Insert into MONO.REPLY (REPLY_CODE,WRITER_CODE,POST_CODE,REPLY_CONTENT,REPLY_DATE,DELFLAG) values ('R_101','B120','FRE41','sdfsdfsdfsdf',to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.REPLY (REPLY_CODE,WRITER_CODE,POST_CODE,REPLY_CONTENT,REPLY_DATE,DELFLAG) values ('R_102','B120','FRE41','sdfsdfsdfsdf',to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.REPLY (REPLY_CODE,WRITER_CODE,POST_CODE,REPLY_CONTENT,REPLY_DATE,DELFLAG) values ('R_103','B120','FRE41','sdfsdfsdfsdfsd',to_date('18/08/31','RR/MM/DD'),'N');
Insert into MONO.REPLY (REPLY_CODE,WRITER_CODE,POST_CODE,REPLY_CONTENT,REPLY_DATE,DELFLAG) values ('R_104','B120','SHO21','asdasdasd',to_date('18/08/31','RR/MM/DD'),'N');
REM INSERTING into MONO.REPLY_REC
SET DEFINE OFF;
REM INSERTING into MONO.REPORT
SET DEFINE OFF;
REM INSERTING into MONO.REQUEST
SET DEFINE OFF;
Insert into MONO.REQUEST (REQ_CODE,REQ_TYPE,USER_CODE,PTN_CODE,CONST_ADDRESS,REQUEST,SAMPLE_PHOTO1,SAMPLE_PHOTO2,REQ_PRICE,REQ_DATE,ACT_STARTDATE,ACT_ENDDATE,REQ_CHECK,CONST_STARTDATE,CONST_ENDDATE) values ('REQ8','업체지정','B120','C122','06267/서울 강남구 강남대로 238 (도곡동, 스카이쏠라빌딩)/4층','ㄹㄴㅇㄹㄴㅇㄹㄴㅇㄹ',null,null,'50만원 이하',null,null,null,'수락',null,null);
Insert into MONO.REQUEST (REQ_CODE,REQ_TYPE,USER_CODE,PTN_CODE,CONST_ADDRESS,REQUEST,SAMPLE_PHOTO1,SAMPLE_PHOTO2,REQ_PRICE,REQ_DATE,ACT_STARTDATE,ACT_ENDDATE,REQ_CHECK,CONST_STARTDATE,CONST_ENDDATE) values ('ACT57','경매','B120','C122','63275/제주특별자치도 제주시 일도2동 378-12/303동 702호','잘해주세요','KakaoTalk_20180727_020207352.png',null,'50만원 이상~100만원 이하',to_date('18/09/05','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),'경매종료',null,null);
Insert into MONO.REQUEST (REQ_CODE,REQ_TYPE,USER_CODE,PTN_CODE,CONST_ADDRESS,REQUEST,SAMPLE_PHOTO1,SAMPLE_PHOTO2,REQ_PRICE,REQ_DATE,ACT_STARTDATE,ACT_ENDDATE,REQ_CHECK,CONST_STARTDATE,CONST_ENDDATE) values ('ACT58','경매','B123','C122','12412/경기 가평군 가평읍 가화로 142-21 (가평읍내주공아파트)/303동 702호','ㅁ','1.PNG',null,'100만원 이상~200만원 이하',to_date('18/09/20','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),'경매종료',null,null);
Insert into MONO.REQUEST (REQ_CODE,REQ_TYPE,USER_CODE,PTN_CODE,CONST_ADDRESS,REQUEST,SAMPLE_PHOTO1,SAMPLE_PHOTO2,REQ_PRICE,REQ_DATE,ACT_STARTDATE,ACT_ENDDATE,REQ_CHECK,CONST_STARTDATE,CONST_ENDDATE) values ('ACT59','경매','B124','C122','06774/서울 서초구 강남대로 27 (양재동, 농수산물유통공사)/4층','ㅁㄴㅇㄹ','44444444444.PNG',null,'100만원 이상~200만원 이하',to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),'경매종료',null,null);
Insert into MONO.REQUEST (REQ_CODE,REQ_TYPE,USER_CODE,PTN_CODE,CONST_ADDRESS,REQUEST,SAMPLE_PHOTO1,SAMPLE_PHOTO2,REQ_PRICE,REQ_DATE,ACT_STARTDATE,ACT_ENDDATE,REQ_CHECK,CONST_STARTDATE,CONST_ENDDATE) values ('ACT60','경매','B125','C122','10428/경기 고양시 일산동구 장대길 106-25 (장항동, 코앤마)/303동 702호','ㅁㄴㅇㄹ','회사관리자.PNG',null,'200만원 이상',to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),'경매종료',null,null);
Insert into MONO.REQUEST (REQ_CODE,REQ_TYPE,USER_CODE,PTN_CODE,CONST_ADDRESS,REQUEST,SAMPLE_PHOTO1,SAMPLE_PHOTO2,REQ_PRICE,REQ_DATE,ACT_STARTDATE,ACT_ENDDATE,REQ_CHECK,CONST_STARTDATE,CONST_ENDDATE) values ('ACT61','경매','B124',null,'13473/경기 성남시 분당구 경부고속도로 409 (삼평동)/4층','ㅁㄴㅇㄹ',null,null,'50만원 이하',to_date('18/08/31','RR/MM/DD'),to_date('18/08/31','RR/MM/DD'),to_date('18/09/07','RR/MM/DD'),'경매중',null,null);
REM INSERTING into MONO.REQ_INFO
SET DEFINE OFF;
Insert into MONO.REQ_INFO (REQ_CODE,ACREAGE,VERANDA,ELECTRIC,FLOORING,PAPERING,COATING,CEILING,MIDDLEDOOR,WINDOW,TILE,BATHROOM,KITCHEN,CLEANING) values ('ACT57',13,'N','조명,콘센트 이동 및 추가, 비디오폰','강마루','실크','선택안함',null,null,null,'현관',null,null,null);
Insert into MONO.REQ_INFO (REQ_CODE,ACREAGE,VERANDA,ELECTRIC,FLOORING,PAPERING,COATING,CEILING,MIDDLEDOOR,WINDOW,TILE,BATHROOM,KITCHEN,CLEANING) values ('REQ8',24,'N','배선공사, 조명,콘센트 이동 및 추가, 비디오폰','선택안함','선택안함','선택안함',null,null,null,null,null,null,null);
Insert into MONO.REQ_INFO (REQ_CODE,ACREAGE,VERANDA,ELECTRIC,FLOORING,PAPERING,COATING,CEILING,MIDDLEDOOR,WINDOW,TILE,BATHROOM,KITCHEN,CLEANING) values ('ACT60',11,'N','조명,콘센트 이동 및 추가','선택안함','합지','선택안함',null,null,null,null,null,'가구 및 싱크대 설치','Y');
Insert into MONO.REQ_INFO (REQ_CODE,ACREAGE,VERANDA,ELECTRIC,FLOORING,PAPERING,COATING,CEILING,MIDDLEDOOR,WINDOW,TILE,BATHROOM,KITCHEN,CLEANING) values ('ACT58',11,'N','비디오폰','선택안함','선택안함','선택안함',null,'현관 중문','창호(샤시) 전체 교체',null,null,null,null);
Insert into MONO.REQ_INFO (REQ_CODE,ACREAGE,VERANDA,ELECTRIC,FLOORING,PAPERING,COATING,CEILING,MIDDLEDOOR,WINDOW,TILE,BATHROOM,KITCHEN,CLEANING) values ('ACT59',11,'N','비디오폰','강마루','선택안함','선택안함',null,null,'창호(샤시) 전체 교체','현관',null,null,null);
Insert into MONO.REQ_INFO (REQ_CODE,ACREAGE,VERANDA,ELECTRIC,FLOORING,PAPERING,COATING,CEILING,MIDDLEDOOR,WINDOW,TILE,BATHROOM,KITCHEN,CLEANING) values ('ACT61',11,'N','비디오폰','강마루','선택안함','선택안함',null,null,null,null,'가구 및 도기 설치','가구 및 싱크대 설치',null);
REM INSERTING into MONO.REVIEW
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index PK_CONST_PHOTO
--------------------------------------------------------

  CREATE UNIQUE INDEX "MONO"."PK_CONST_PHOTO" ON "MONO"."CONST_PHOTO" ("PTN_CODE", "PHOTO_NEWNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PTN_QNA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MONO"."PTN_QNA_PK" ON "MONO"."PTN_QNA" ("POST_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger TRG_SET_AUCTION_PTN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MONO"."TRG_SET_AUCTION_PTN" -- AUCTION_PTN에서 'T'를 설정했을 때
AFTER UPDATE ON AUCTION_PTN
FOR EACH ROW
BEGIN
    IF :NEW.BID_CHECK = 'Y' THEN
        UPDATE REQUEST SET PTN_CODE = :NEW.PTN_CODE, ACT_ENDDATE = SYSDATE, REQ_CHECK = '경매종료'
        WHERE REQ_CODE = :NEW.REQ_CODE;
    END IF;
END;

/
ALTER TRIGGER "MONO"."TRG_SET_AUCTION_PTN" ENABLE;
--------------------------------------------------------
--  Constraints for Table KEYWORD
--------------------------------------------------------

  ALTER TABLE "MONO"."KEYWORD" MODIFY ("KEYWORD_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "MONO"."KEYWORD" ADD PRIMARY KEY ("KEYWORD_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REPLY_REC
--------------------------------------------------------

  ALTER TABLE "MONO"."REPLY_REC" ADD PRIMARY KEY ("MEMBER_CODE", "REPLY_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table POST_REC
--------------------------------------------------------

  ALTER TABLE "MONO"."POST_REC" ADD PRIMARY KEY ("MEMBER_CODE", "POST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PARTNER
--------------------------------------------------------

  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_CONTACTS" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" ADD PRIMARY KEY ("PTN_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_INTRO" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_STYLES" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_LOCATION" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_LICENSE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_CHECK" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_OWNER" NOT NULL ENABLE);
  ALTER TABLE "MONO"."PARTNER" MODIFY ("PTN_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ADVERTISING
--------------------------------------------------------

  ALTER TABLE "MONO"."ADVERTISING" MODIFY ("ADV_LEVEL" NOT NULL ENABLE);
  ALTER TABLE "MONO"."ADVERTISING" ADD PRIMARY KEY ("POST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."ADVERTISING" MODIFY ("ADV_ENDDATE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."ADVERTISING" MODIFY ("ADV_STARTDATE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."ADVERTISING" MODIFY ("ADV_PHOTO" NOT NULL ENABLE);
  ALTER TABLE "MONO"."ADVERTISING" MODIFY ("ADV_BANNER" NOT NULL ENABLE);
  ALTER TABLE "MONO"."ADVERTISING" MODIFY ("PTN_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CONST_PHOTO
--------------------------------------------------------

  ALTER TABLE "MONO"."CONST_PHOTO" ADD CONSTRAINT "PK_CONST_PHOTO" PRIMARY KEY ("PTN_CODE", "PHOTO_NEWNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."CONST_PHOTO" MODIFY ("PHOTO_NEWNAME" NOT NULL ENABLE);
  ALTER TABLE "MONO"."CONST_PHOTO" MODIFY ("PHOTO_NUM" NOT NULL ENABLE);
  ALTER TABLE "MONO"."CONST_PHOTO" MODIFY ("PHOTO_OLDNAME" NOT NULL ENABLE);
  ALTER TABLE "MONO"."CONST_PHOTO" MODIFY ("PTN_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PTN_QNA
--------------------------------------------------------

  ALTER TABLE "MONO"."PTN_QNA" ADD CONSTRAINT "PTN_QNA_PK" PRIMARY KEY ("POST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REVIEW
--------------------------------------------------------

  ALTER TABLE "MONO"."REVIEW" ADD PRIMARY KEY ("POST_CODE", "REQ_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."REVIEW" MODIFY ("GPA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table FAVOR_BLOCK
--------------------------------------------------------

  ALTER TABLE "MONO"."FAVOR_BLOCK" ADD PRIMARY KEY ("USER_CODE", "TARGET_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."FAVOR_BLOCK" MODIFY ("FB_TYPE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."FAVOR_BLOCK" MODIFY ("TARGET_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MEMBER
--------------------------------------------------------

  ALTER TABLE "MONO"."MEMBER" MODIFY ("REPORT_COUNT" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" ADD PRIMARY KEY ("MEMBER_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_JDATE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_EMAIL" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_NAME" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_PWD" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_ID" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_RANK" NOT NULL ENABLE);
  ALTER TABLE "MONO"."MEMBER" MODIFY ("MEMBER_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUCTION_PTN
--------------------------------------------------------

  ALTER TABLE "MONO"."AUCTION_PTN" ADD PRIMARY KEY ("PTN_CODE", "REQ_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."AUCTION_PTN" MODIFY ("BID_CHECK" NOT NULL ENABLE);
  ALTER TABLE "MONO"."AUCTION_PTN" MODIFY ("PTN_PAY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQUEST
--------------------------------------------------------

  ALTER TABLE "MONO"."REQUEST" ADD PRIMARY KEY ("REQ_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."REQUEST" MODIFY ("REQ_CHECK" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REQUEST" MODIFY ("REQ_PRICE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REQUEST" MODIFY ("CONST_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REQUEST" MODIFY ("USER_CODE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REQUEST" MODIFY ("REQ_TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table POST
--------------------------------------------------------

  ALTER TABLE "MONO"."POST" ADD PRIMARY KEY ("POST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."POST" MODIFY ("WRITTEN_DATE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."POST" MODIFY ("VIEWS_COUNT" NOT NULL ENABLE);
  ALTER TABLE "MONO"."POST" MODIFY ("CONTENT" NOT NULL ENABLE);
  ALTER TABLE "MONO"."POST" MODIFY ("TITLE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."POST" MODIFY ("WRITER_CODE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."POST" MODIFY ("POST_TYPE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."POST" MODIFY ("DELFLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REQ_INFO
--------------------------------------------------------

  ALTER TABLE "MONO"."REQ_INFO" ADD PRIMARY KEY ("REQ_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."REQ_INFO" MODIFY ("VERANDA" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REQ_INFO" MODIFY ("ACREAGE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPORT
--------------------------------------------------------

  ALTER TABLE "MONO"."REPORT" ADD PRIMARY KEY ("REPORT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."REPORT" MODIFY ("REPORT_DATE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPORT" MODIFY ("ADMIN_CHECK" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPORT" MODIFY ("REPORT_REASON" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPORT" MODIFY ("REPORTED_CODE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPORT" MODIFY ("REPORTER_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REPLY
--------------------------------------------------------

  ALTER TABLE "MONO"."REPLY" ADD PRIMARY KEY ("REPLY_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MONO"."REPLY" MODIFY ("REPLY_DATE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPLY" MODIFY ("REPLY_CONTENT" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPLY" MODIFY ("POST_CODE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPLY" MODIFY ("WRITER_CODE" NOT NULL ENABLE);
  ALTER TABLE "MONO"."REPLY" MODIFY ("DELFLAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table ADVERTISING
--------------------------------------------------------

  ALTER TABLE "MONO"."ADVERTISING" ADD FOREIGN KEY ("POST_CODE")
	  REFERENCES "MONO"."POST" ("POST_CODE") ENABLE;
  ALTER TABLE "MONO"."ADVERTISING" ADD FOREIGN KEY ("PTN_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AUCTION_PTN
--------------------------------------------------------

  ALTER TABLE "MONO"."AUCTION_PTN" ADD FOREIGN KEY ("PTN_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."AUCTION_PTN" ADD FOREIGN KEY ("REQ_CODE")
	  REFERENCES "MONO"."REQUEST" ("REQ_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONST_PHOTO
--------------------------------------------------------

  ALTER TABLE "MONO"."CONST_PHOTO" ADD CONSTRAINT "FK_PTN_CODE" FOREIGN KEY ("PTN_CODE")
	  REFERENCES "MONO"."PARTNER" ("PTN_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FAVOR_BLOCK
--------------------------------------------------------

  ALTER TABLE "MONO"."FAVOR_BLOCK" ADD FOREIGN KEY ("USER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."FAVOR_BLOCK" ADD FOREIGN KEY ("TARGET_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PARTNER
--------------------------------------------------------

  ALTER TABLE "MONO"."PARTNER" ADD FOREIGN KEY ("PTN_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table POST
--------------------------------------------------------

  ALTER TABLE "MONO"."POST" ADD FOREIGN KEY ("WRITER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table POST_REC
--------------------------------------------------------

  ALTER TABLE "MONO"."POST_REC" ADD FOREIGN KEY ("MEMBER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."POST_REC" ADD FOREIGN KEY ("POST_CODE")
	  REFERENCES "MONO"."POST" ("POST_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PTN_QNA
--------------------------------------------------------

  ALTER TABLE "MONO"."PTN_QNA" ADD CONSTRAINT "POST_CODE_FK" FOREIGN KEY ("POST_CODE")
	  REFERENCES "MONO"."POST" ("POST_CODE") ENABLE;
  ALTER TABLE "MONO"."PTN_QNA" ADD CONSTRAINT "PTN_CODE_FK" FOREIGN KEY ("PTN_CODE")
	  REFERENCES "MONO"."PARTNER" ("PTN_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPLY
--------------------------------------------------------

  ALTER TABLE "MONO"."REPLY" ADD FOREIGN KEY ("WRITER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."REPLY" ADD FOREIGN KEY ("POST_CODE")
	  REFERENCES "MONO"."POST" ("POST_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPLY_REC
--------------------------------------------------------

  ALTER TABLE "MONO"."REPLY_REC" ADD FOREIGN KEY ("MEMBER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."REPLY_REC" ADD FOREIGN KEY ("REPLY_CODE")
	  REFERENCES "MONO"."REPLY" ("REPLY_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REPORT
--------------------------------------------------------

  ALTER TABLE "MONO"."REPORT" ADD FOREIGN KEY ("REPORTER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."REPORT" ADD FOREIGN KEY ("REPORTED_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."REPORT" ADD FOREIGN KEY ("POST_CODE")
	  REFERENCES "MONO"."POST" ("POST_CODE") ENABLE;
  ALTER TABLE "MONO"."REPORT" ADD FOREIGN KEY ("REPLY_CODE")
	  REFERENCES "MONO"."REPLY" ("REPLY_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQUEST
--------------------------------------------------------

  ALTER TABLE "MONO"."REQUEST" ADD FOREIGN KEY ("USER_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
  ALTER TABLE "MONO"."REQUEST" ADD FOREIGN KEY ("PTN_CODE")
	  REFERENCES "MONO"."MEMBER" ("MEMBER_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REQ_INFO
--------------------------------------------------------

  ALTER TABLE "MONO"."REQ_INFO" ADD FOREIGN KEY ("REQ_CODE")
	  REFERENCES "MONO"."REQUEST" ("REQ_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REVIEW
--------------------------------------------------------

  ALTER TABLE "MONO"."REVIEW" ADD FOREIGN KEY ("POST_CODE")
	  REFERENCES "MONO"."POST" ("POST_CODE") ENABLE;
  ALTER TABLE "MONO"."REVIEW" ADD FOREIGN KEY ("REQ_CODE")
	  REFERENCES "MONO"."REQUEST" ("REQ_CODE") ENABLE;
	  
-- 파트너 프리뷰	  
CREATE OR REPLACE VIEW PARTNER_PREVIEW AS 
SELECT PTN_CODE, PTN_NAME, PTN_RANK, PTN_LOCATION, METASCORE, PTN_LOGO, SUBSTR(PTN_PHOTO, 1, INSTR(PTN_PHOTO, '§') - 1) AS PTN_MAIN_PHOTO, PTN_STYLES, MEMBER_JDATE
FROM PARTNER_DETAIL;	  
